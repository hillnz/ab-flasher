name: build docker images

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - bootstrap

env:
  DOCKER_REPO: jonoh/ab-flasher

jobs:

  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bump poetry version
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          pip3 install poetry
          git config user.name github-actions
          git config user.email github-actions@github.com
          VERSION=$(poetry version -s)
          if git rev-parse "$VERSION"; then
            poetry version patch
            VERSION=$(poetry version -s)
            git add pyproject.toml
            git commit -m 'Bump version'
            git push
          fi
          git tag $VERSION
          git push --tags

  build:
    needs: tag
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          # These are configured for updates in renovate.json
          - base: python:3.9.4
            # Only works on rpi, but amd64 can be useful for testing
            platforms: linux/amd64,linux/arm/v7,linux/arm64
          - base: jonoh/rpi-base:v0.0.8
            variant: rpi
            platforms: linux/arm/v7
          
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Get version
        id: get_version
        run: |
          pip3 install poetry
          VERSION=$(poetry version -s)
          if ! git rev-parse "$VERSION"; then
            echo "Expected $VERSION to already be tagged!"
            false
          fi
          echo "::set-output name=VERSION::$VERSION"          

      - name: Set docker tag(s)
        id: docker_tag
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          DOCKER_REPO: ${{ env.DOCKER_REPO }}
          VARIANT: ${{ matrix.variant }}
        run: |
          SUFFIX=""
          if [ "$VARIANT" != "" ]; then
            SUFFIX="-${VARIANT}"
          fi
          DOCKER_TAG="${DOCKER_REPO}:latest${SUFFIX}"
          if [ "$VERSION" != "" ]; then
            DOCKER_TAG="${DOCKER_TAG},${DOCKER_REPO}:${VERSION}${SUFFIX}"
          fi
          echo "::set-output name=DOCKER_TAGS::${DOCKER_TAG}"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            BASE_IMAGE=${{ matrix.base }}
          platforms: ${{ matrix.platforms }}
          push: ${{ github.ref == 'refs/heads/main' }}
          load: ${{ github.ref != 'refs/heads/main' && matrix.variant == 'rpi' }}
          tags: ${{ steps.docker_tag.outputs.DOCKER_TAGS }}

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.DOCKER_REPO }}
          readme-filepath: ./readme.md

      - name: Build OS image
        if: ${{ matrix.variant == 'rpi' }}
        env:
          DOCKER_REPO: ${{ env.DOCKER_REPO }}
        run: |
          IMAGE="${DOCKER_REPO}:latest-rpi"
          if ! docker inspect "$IMAGE" >/dev/null; then
            echo "Image doesn't already exist locally, pull needed"
            docker pull "$IMAGE"
          fi
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $(pwd):/build \
            jonoh/rpi-docker-build \
              --docker-image "$IMAGE" \
              --b-partition \
              --data-partition \
              /build/flash.img.gz

      - name: Release
        uses: softprops/action-gh-release@affa18ef97bc9db20076945705aba8c516139abd
        if: ${{ github.ref == 'refs/heads/main' && matrix.variant == 'rpi' }}
        with:
          files: |
            flash.img.gz
          tag_name: ${{ steps.get_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
